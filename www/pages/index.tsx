import Head from "next/head";
import {
  InferGetServerSidePropsType,
  GetServerSideProps,
  NextPage,
} from "next";
import { client } from "../utils/client";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import {
  GetFriends,
  GetFriendsQuery,
  GetFriendsQueryVariables,
} from "../generated/graphql";

interface Props {
  friends: GetFriendsQuery["friend"];
}

const Home: NextPage<Props> = ({ friends }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {friends.map((friend) => (
          <p key={friend.id}>{friend.name}</p>
        ))}
      </main>

      {/* <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer> */}
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
  return client
    .query<GetFriendsQuery, GetFriendsQueryVariables>(GetFriends)
    .toPromise()
    .then((d) => {
      console.log(d);

      return {
        props: { friends: d.data?.friend },
      };
    })
    .catch((e) => ({ props: {} }));
};
